<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class User extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('User_model');
    }

    /*
     * Listing of user
     */
    function index()
    {
        $data['user'] = $this->User_model->get_all_user();

        $data['_view'] = 'user/index';
        $this->load->view('templates/pure/header');
        $this->load->view('layouts/bulma-dashboard/main', $data);
        $this->load->view('templates/pure/footer');
    }

    /*
     * Adding a new user
     */
    function addCust()
    {
        if (isset($_POST) && count($_POST) > 0) {
            $hak_akses = $this->input->post('hak_akses');
            $email     = $this->input->post('email');
            $sql       = "SELECT * FROM user WHERE email='" . $email . "' AND hak_akses='Customer'";
            $query     = $this->db->query($sql);
            if ($query->num_rows() > 0) {
                $this->load->view('templates/pure/header');
                $this->load->view('login/register_cust_false');
                $this->load->view('templates/pure/footer');
            } else {
                $params = array(
                    'password' => md5($this->input->post('password')),
                    'nama' => $this->input->post('nama'),
                    'email' => $this->input->post('email'),
                    'hak_akses' => $this->input->post('hak_akses'),
                );

                $user_id = $this->User_model->add_userCust($params);
                redirect('Main');
            }
        } else {
            $data['_view'] = 'user/add';
            $this->load->view('templates/pure/header');
            $this->load->view('layouts/bulma-dashboard/main', $data);
            $this->load->view('templates/pure/footer');
        }
    }

    function addTerapis()
    {
        if (isset($_POST) && count($_POST) > 0) {
            $hak_akses = $this->input->post('hak_akses');
            $email     = $this->input->post('email');
            $sql       = "SELECT * FROM user WHERE email='" . $email . "' AND hak_akses='Terapis'";
            $query     = $this->db->query($sql);
            if ($query->num_rows() > 0) {
                $this->load->view('templates/pure/header');
                $this->load->view('login/register_terapis_false');
                $this->load->view('templates/pure/footer');
            } else {
                $params = array(
                    'password' => md5($this->input->post('password')),
                    'nama' => $this->input->post('nama'),
                    'email' => $this->input->post('email'),
                    'hak_akses' => $this->input->post('hak_akses'),
                );

                $user_id = $this->User_model->add_userTerapis($params);
                redirect('Main');
            }
        } else {
            $data['_view'] = 'user/add';
            $this->load->view('templates/pure/header');
            $this->load->view('layouts/bulma-dashboard/main', $data);
            $this->load->view('templates/pure/footer');
        }
    }

    /*
     * Editing a user
     */
    function edit($id_user)
    {
        // check if the user exists before trying to edit it
        $data['user'] = $this->User_model->get_user($id_user);

        if (isset($data['user']['id_user'])) {
            if (isset($_POST) && count($_POST) > 0) {
                $params = array(
                    'password' => md5($this->input->post('password')),
                    'nama' => $this->input->post('nama'),
                    'email' => $this->input->post('email'),
                    'hak_akses' => $this->input->post('hak_akses'),
                );

                $this->User_model->update_user($id_user, $params);
                redirect('user/index');
            } else {
                $data['_view'] = 'user/edit';
                $this->load->view('templates/pure/header');
                $this->load->view('layouts/bulma-dashboard/main', $data);
                $this->load->view('templates/pure/footer');
            }
        } else
            show_error('The user you are trying to edit does not exist.');
    }

    /*
     * Deleting user
     */
    function remove($id_user)
    {
        $user = $this->User_model->get_user($id_user);

        // check if the user exists before trying to delete it
        if (isset($user['id_user'])) {
            $this->User_model->delete_user($id_user);
            redirect('user/index');
        } else
            show_error('The user you are trying to delete does not exist.');
    }
}
